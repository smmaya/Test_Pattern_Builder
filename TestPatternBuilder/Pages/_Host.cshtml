@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace TestPatternBuilder.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="~/"/>
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css"/>
    <link href="css/site.css" rel="stylesheet"/>
    <link href="TestPatternBuilder.styles.css" rel="stylesheet"/>
    <link rel="icon" type="image/png" href="favicon.png"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered"/>
    <title>Test Pattern Builder For Jira Comments</title>
</head>
<body>
<component type="typeof(App)" render-mode="ServerPrerendered"/>

<div id="blazor-error-ui">
    <environment include="Staging,Production">
        An error has occurred. This application may no longer respond until reloaded.
    </environment>
    <environment include="Development">
        An unhandled exception has occurred. See browser dev tools for details.
    </environment>
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

<script src="_framework/blazor.server.js"></script>

<script>
    function CopyToClipboard(testPatternId) {
        var originalDiv = document.getElementById(testPatternId);

        // Clone the original div and remove images from the clone
        var divClone = originalDiv.cloneNode(true);
        var images = divClone.getElementsByTagName("img");
        for (var i = images.length - 1; i >= 0; i--) {
            images[i].remove();
        }

        // Create a temporary hidden element to hold the text without images
        var tempElement = document.createElement("div");
        tempElement.style.position = "absolute";
        tempElement.style.left = "-9999px";
        tempElement.innerHTML = divClone.innerHTML;

        // Append the temporary element to the document body
        document.body.appendChild(tempElement);

        // Select and copy the content from the temporary element
        var range = document.createRange();
        range.selectNode(tempElement);
        window.getSelection().removeAllRanges();
        window.getSelection().addRange(range);
        document.execCommand("copy");

        // Remove the temporary element
        document.body.removeChild(tempElement);

        // Clear the selection
        window.getSelection().removeAllRanges();
    }
</script>

</body>
</html>